name: 'Blocklet workflow'
description: 'Workflow for develop blocklet'
inputs:
  deps-npm-client:
    description: 'deps npm client'
    default: 'yarn'
    required: false
  deps-server-version:
    description: 'Setup blocklet-server version'
    default: 'latest'
    required: false
  # bundle
  bundle-command:
    description: 'Blocklet bundle command'
    default: 'echo "Echo from bundle command"'
    required: true
  # upload
  store-endpoint:
    description: 'Endpoint of blocklet store'
    required: true
  store-access-token:
    description: 'Access token of blocklet store'
    required: false
  store-developer-did:
    description: 'DeveloperDid of blocklet store'
    required: false
  # deploy
  server-endpoint:
    description: 'Endpoint of blocklet server'
    required: true
  server-access-key:
    description: 'Access key of blocklet server'
    required: true
  server-access-secret:
    description: 'Access secret of blocklet server'
    required: true
  slack-webhook:
    description: 'Webhook of slack'
    required: false
  deploy-app-did:
    description: 'Deploy as a app child blocklet'
    required: false
  deploy-mount-point:
    description: 'If is a child blocklet, need setup a mount point'
    required: false
  # release
  github-token:
    description: 'Github token'
    required: true
  # skip
  skip-deps:
    description: 'Skip prepare @blocklet/cli'
    default: false
  skip-bundle:
    description: 'Skip bundle'
    default: false
  skip-upload:
    description: 'Skip upload blocklet to blocklet store'
    default: true
  skip-deploy:
    description: 'Skip deploy blocklet to blocklet server'
    default: true
  skip-release:
    description: 'Skip release blocklet to github'
    default: false
  skip-readme:
    description: 'Skip update readme'
    default: false
  # working directory
  working-directory:
    description: 'Set default working directory'
    default: ./

  # Alias upload
  registry-endpoint:
    description: 'Alias of store-endpoint'
    required: true
  access-token:
    description: 'Alias of store-access-token'
    required: false
  developer-sk:
    description: 'Alias of store-access-token'
    required: false
  # Alias deploy
  abtnode-endpoint:
    description: 'Endpoint of blocklet server'
    required: true
  access-key:
    description: 'Access key of blocklet server'
    required: true
  access-secret:
    description: 'Access secret of blocklet server'
    required: true
  # Alias deps
  skip-abtnode:
    description: 'Alias of skip-deps'
    default: false
runs:
  using: 'composite'
  steps:
    - name: Prepare blocklet cli deps
      if: ${{ inputs.skip-deps != 'true' && inputs.skip-abtnode != 'true' }}
      run: |
        if ${{inputs.deps-npm-client == 'pnpm'}} ; then pnpm install -g @blocklet/cli@${{ inputs.deps-server-version}}; elif ${{ inputs.deps-npm-client == 'yarn' }} ; then yarn global add @blocklet/cli@${{ inputs.deps-server-version}}; else npm install -g @blocklet/cli@${{ inputs.deps-server-version}} ; fi
      shell: bash
    - name: Bundle blocklet
      working-directory: ${{ inputs.working-directory }}
      run: if ${{ inputs.skip-bundle }}; then echo 'Skip bundle'; else ${{ inputs.bundle-command }}; fi
      shell: bash
    - name: Upload blocklet to blocklet store
      uses: blocklet/action-upload@v1
      with:
        working-directory: ${{ inputs.working-directory }}
        endpoint: ${{ inputs.store-endpoint || inputs.registry-endpoint }}
        access-token: ${{ inputs.store-access-token || inputs.developer-sk }}
        developer-did: ${{ inputs.store-developer-did }}
        skip: ${{ inputs.skip-upload }}
    - name: Deploy blocklet to blocklet server
      uses: blocklet/action-deploy@v1
      with:
        working-directory: ${{ inputs.working-directory }}
        endpoint: ${{ inputs.server-endpoint || inputs.abtnode-endpoint }}
        access-key: ${{ inputs.server-access-key || inputs.access-key }}
        access-secret: ${{ inputs.server-access-secret || inputs.access-secret }}
        slack-webhook: ${{ inputs.slack-webhook }}
        app-did: ${{ inputs.deploy-app-did }}
        mount-point: ${{ inputs.deploy-mount-point }}
        skip: ${{ inputs.skip-deploy }}
    - name: Create blocklet release to github
      uses: blocklet/action-release-to-github@v1
      with:
        working-directory: ${{ inputs.working-directory }}
        token: ${{ inputs.github-token }}
        skip: ${{ inputs.skip-release }}
        skip-readme: ${{ inputs.skip-readme }}
